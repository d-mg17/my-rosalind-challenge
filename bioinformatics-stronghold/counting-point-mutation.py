def hammingDistance(dna1: str, dna2: str) -> int:
  hamming_distance: int = 0
  max_len: int = len(dna1)
  
  for i in range(max_len):
    if dna1[i] != dna2[i]:
      hamming_distance += 1
  
  return hamming_distance

def main():
  text = """TCGGTTCCCGACCCCGATCTACATAAATGTTCTTTTTCGTCACATACCTTGGCTTGCTTGGCGGATACGGAAGCACTTAGCTTTCACATATCACTGGGCGGCAGACACTCTCATTCTGGTCTCGTGGCTCTTGAATAATGAGAGGACTCTGCCACCCCCAGAAAGCTTCATGTGGGACTTTCGCGCTCCAGCCCTCTTCCATACCCATAAGGTCTTCGCTACTTCTCGGACTAATACGTAGAGATACCCAGGCCTCCGGTTATGAATACATTCCCCTCATACTTGCCTATGTAATAAGGGTTACCTGAGAGACCCCCGCAACTAAAAGCCTGCCCTCTCAAAGGTGTCGAGATCGGAAGCAAGAATCTAACACAGTCTTAGTAAGATCGTCAAGACAATGAACTCTCAGCTGCACCCTATTATTTGGGGTCGCACACCGACGGCCACTCCATAGCTTGTCCCAACTTTTTCAAGATCATCCTCAGATCGTCTCCCGCCTTCGGCCCACCGTAACGGACGAGTTTTCACCCGCATGGCCTTTCATGATGCGCGCGCCGGCTCCTCATGTAGGATTGGCATAAAGAATTGGATTGGTCTAATGGTGAAGGACCTCGCGAGTCCCTCGACGACCTAGGACACCCAATGTGTGACAGCGGGTAATCTAAACCCCAACTCGATCTCTGCCGTGCGCGCCACGTACCACTTACACGGTTGAGGTTATGGACAGGCATTCCCTTACCAGTAATGTAGCGACCCATTTCGGTAGCGTTGAGCGCGCGGGTTCATGAAACCCGGTAAACGCAAGAGTCGGATGCCACGGCCCATCTTGGGCGCATTATGTGCGCATGTTCCTAGTGCTGGTGTTTAGCAAAGTCAATATGGTCCGCGTGGTCTTAAGAATAGAGAACCTGTTGGCCGCTGTTTCAGGTAAGATGTTCATATGAACACTATTATGTCAGTGCACATGTGTAAGAAGTTCCTCTCAACAGAACTCCCGC
TTGGGATACTCATCAGTGCTGACAACTTCAGACGTGTCATATGCTCTATTGACTTGACGCATTCCTAGAGGGGTAACTTGCGGTCGAACTTTTCTGCTTGTCAGACATTCTAATTCTTTTGTTTGACAGTCCGAATAACAAGACGGCCCTGACATTCCCAGGTACTTTCCTGCGGTCTGCCCGCGTCCCAGCGCTCCATCATGCATGTGTGTCCTTCACTAATACTGGGAGTCATACAACGGTACGAAGAAAGAGACGGCTGAAAATACGTTTGCTCCAGTCGAGCCGTGGCTATCAACGTTACTATGGGTATCGCGGGAATCTAAAAACTGGCCTGTCGACCCACTGAACACAGGCCATTCTAACCTACCGAGGTCTAGAGAAGCCTGATAAGAAAATTAACCGTGAGGTTAAAGGTCGCAACATTTATGGACCTGCGACAAACATGAAGAAGATTTGACGTACATTGGCCGCAGCACTATCATTTGGTATTTCGTCTGCGAACAATCGTCTCGGCCGAAGTATAACTCGCGAGGCCTGTTATAGATGTCGGGCGAGATCCTTGCGAAGGAATCTCGGGACAGGACCCACTAATTCAATGGTCATGGCCCACGAAGGATGTGCGACGAGGTACAGGACCCAGTCTGCGACAGAGCTTGATTTATACTATTATGTCGCATGCTCCTGCGGCGGACCATAGTCGCGTTTCCCTAATAGAAAGCGCCCAACACCACCTTACTTGTGAGGTATATACAAGCTCGTGGTGCGAGATGATAGAGGGTCCATAAATCCAAGTCTACCCATTGGGCTAGGGCACTGGCTCCTCTGGGGCTCGTGATACTCTGAGGGCCATCATTGCGGGGATTTCGAAAGGCGTTATGGTCAGCCTTGCCTTATTTGGAGATGGCTCCTAGGGAGCTCTATTATGTGCCGTGGGCATGGTACCATAATTAAATCTGTGCATAACTGACAGAACATGATGATCAGAGCAGTCCGGA"""
  string1, string2 = text.split('\n')
  hamming_distance = hammingDistance(string1, string2)
  print(hamming_distance)

if __name__ == "__main__":
  main()